{"version":3,"sources":["components/Header/Header.js","store/actions/cartActions.js","components/ItemDetails/ItemDetails.js","components/ShoppingItem/ShoppingItem.js","components/ShoppingList/ShoppingList.js","components/SortOption/SortOption.js","components/SortList/SortList.js","components/Filters/Filters.js","containers/Home/Home.js","components/CartItem/CartItem.js","components/PriceInfo/PriceInfo.js","containers/Cart/Cart.js","components/Footer/Footer.js","components/Layout/Layout.js","App.js","serviceWorker.js","shared/utility/utility.js","store/reducers/cartReducer.js","store/store.js","index.js"],"names":["connect","state","cartItems","dispatch","searchApply","item","type","value","props","className","to","placeholder","onChange","event","target","searchFilterApply","length","itemDetails","Fragment","name","price","actual","display","discount","shoppingItem","src","image","alt","onClick","addToCartClick","shoppingList","itemList","map","index","key","itemClick","sortOption","sortOptionList","id","checked","displayName","checkedSortItem","sortList","handleSorting","filters","styles","code","margin","textAlign","info","fontStyle","color","fontSize","sliderWrapper","width","slider","height","trackStyle","border","backgroundColor","top","highlightedTrackStyle","handleStyle","hoveredHandleStyle","activeHandleStyle","focusedHandleStyle","priceRange","start","end","style","step","min","max","updatePriceRange","wrapperStyle","applyFilter","shoppingItemList","addToCart","updateSort","updateFliter","priceRangeVal","isMobile","cartItem","handleUpdateCart","quantity","handleRemoveFromCart","priceInfo","itemCount","totalDisplayPrice","totalDiscountPrice","totalPrice","cartItemList","total","updateCart","IsAdd","isAdd","data","removeFromCart","totalActualPrice","parseInt","PriceInfoProps","footer","layout","exact","path","component","Home","Cart","App","Boolean","window","location","hostname","match","dynamicsort","order","property","optProperty","sort_order","a","b","valA","valB","initState","items","sortKey","isFilterApplied","action","currentItem","find","newTotal","existedCartItem","existedItemIndex","findIndex","splice","itemPriceByQuantity","priceRangeData","sortingKey","forEach","sort","filter","updateFilter","selectedSorting","searchText","trim","toLowerCase","indexOf","cartReducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75e24a9a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss';\r\nimport { searchApply } from '../../store/actions/cartActions';\r\n\r\nconst header = (props) => {\r\n    const searchFilterApply = (event) => {\r\n        props.searchApply(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='headerContainer'>\r\n            <nav className=\"navbar justify-content-between\">\r\n                <Link to=\"/\" className=\"navbar-brand\"><i className=\"fa fa-star\"></i></Link>\r\n                <form className=\"form-inline\">\r\n                    <div className=\"search\" >\r\n                        <input type=\"text\" placeholder='Search' onChange = {(event) => searchFilterApply(event)} /><i className=\"fa fa-search\"></i>\r\n                    </div>\r\n                    <Link to=\"/cart\" className=\"cartIcon\">\r\n    <i className=\"fa fa-shopping-cart\">{props.cartItems.length > 0 ? <span className=\"badge badge-danger\">{props.cartItems.length}</span> : null}</i>\r\n                    </Link>\r\n                </form>\r\n            </nav>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n    return {\r\n      cartItems: state.cartItems\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        searchApply: (item)=>{dispatch(searchApply(item))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(header);","export const addToCart= (item)=>{\r\n    return {\r\n        type: 'ADD_TO_CART',\r\n        item \r\n    }\r\n}\r\n\r\nexport const updateCart= (item, isAdd)=>{\r\n    return {\r\n        type: 'UPDATE_CART',\r\n        data: { item, isAdd }\r\n    }\r\n}\r\n\r\nexport const removeFromCart= (item)=>{\r\n    return {\r\n        type: 'REMOVE_FROM_CART',\r\n        item \r\n    }\r\n}\r\n\r\nexport const updateSort= (item)=>{\r\n    return {\r\n        type: 'UPDATE_SORT',\r\n        item\r\n    }\r\n}\r\n\r\nexport const updateFliter= (priceRangeVal)=>{\r\n    return {\r\n        type: 'UPDATE_FILTER',\r\n        priceRangeVal\r\n    }\r\n}\r\n\r\nexport const updatePriceRange= (value)=>{\r\n    return {\r\n        type: 'UPDATE_PRICE_RANGE',\r\n        value\r\n    }\r\n}\r\n\r\nexport const searchApply= (value)=>{\r\n    return {\r\n        type: 'SEARCH_APPLY',\r\n        value\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './ItemDetails.scss';\r\n\r\nconst itemDetails = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='itemInfo'>\r\n                <label className='itemName'>{props.item.name}</label>\r\n                <div className='price_offer'>\r\n                    <label className='price'>&#8377;{props.item.price.actual} <del>{props.item.price.display}</del></label>\r\n                    <label className='offer'>{props.item.discount}% off</label>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default itemDetails;","import React from 'react';\r\nimport './ShoppingItem.scss';\r\nimport ItemDetails from '../ItemDetails/ItemDetails';\r\n\r\nconst shoppingItem = (props) => {\r\n\r\n    return (\r\n        <div className='shoppingItem'>\r\n            <img src={props.item.image} alt={props.item.name} />\r\n            <ItemDetails item={props.item} />\r\n            <button onClick={() => props.addToCartClick(props.item)} >Add to Cart</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default shoppingItem;","import React from 'react';\r\nimport ShoppingItem from '../ShoppingItem/ShoppingItem';\r\nimport './ShoppingList.scss';\r\n\r\nconst shoppingList = (props) => {\r\n    let itemList = props.itemList.map((item, index)=>{\r\n        return(\r\n            <ShoppingItem item={item} key={index} addToCartClick={props.itemClick} />\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className='shoppingList'>\r\n            {itemList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default shoppingList;","import React from 'react';\r\nimport './SortOption.scss';\r\n\r\nconst sortOption = (props) => {\r\n\r\n    return (\r\n        <div className='sortOptionContainer'>\r\n        {\r\n          props.sortOptionList.map(item => (\r\n            <label key={item.id} className={item.checked? 'bold': ''}>\r\n                <input type='checkbox' name={item.displayName} checked={item.checked} onChange={() => props.checkedSortItem(item)} />\r\n              {item.displayName}\r\n            </label>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default sortOption;","import React from 'react';\r\nimport './SortList.scss';\r\nimport SortOption from '../SortOption/SortOption';\r\n\r\nconst sortList = (props) => {\r\n\r\n    return (\r\n        <div className='sortListContainer'>\r\n            <label>Sort By </label>\r\n            <SortOption\r\n                sortOptionList={props.sortOptionList}\r\n                checkedSortItem={props.handleSorting}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default sortList;","import React from 'react';\r\n// import InputRange from 'react-input-range';\r\nimport { RangeSlider } from 'reactrangeslider';\r\n// import Slider from 'range-sliders';\r\nimport './Filters.scss';\r\n\r\nconst filters = (props) => {\r\n    const styles = {\r\n        code: {\r\n          margin: '10px 0',\r\n          textAlign: 'left',\r\n        },\r\n        info: {\r\n          fontStyle: 'italic',\r\n          color: '#3131d4',\r\n          fontSize: 15,\r\n          margin: '5px 0',\r\n        },\r\n        sliderWrapper: {\r\n          width: '100%',\r\n        },\r\n        slider: {\r\n          height: 40,\r\n        },\r\n        trackStyle: {\r\n          height: 5,\r\n          border: '2px solid #b6b4b4',\r\n          backgroundColor: '#b6b4b4',\r\n          top: 11,\r\n        },\r\n        highlightedTrackStyle: {\r\n          height: 2,\r\n          border: '2px solid #2874f0',\r\n          backgroundColor: '#2874f0',\r\n          top: 11,\r\n        },\r\n        handleStyle: {\r\n          height: 24,\r\n          width: 24,\r\n          border: '2px solid #978f8f',\r\n          backgroundColor: '#fff',\r\n        },\r\n        hoveredHandleStyle: {\r\n          backgroundColor: '#fff',\r\n          border: '2px solid #978f8f'\r\n        },\r\n        activeHandleStyle: {\r\n            backgroundColor: '#fff',\r\n            border: '2px solid #978f8f'\r\n        },\r\n        focusedHandleStyle: {\r\n            backgroundColor: '#fff',\r\n            border: '2px solid #978f8f'\r\n        },\r\n      };\r\n\r\n    return (\r\n        <div className='filtersContainer'>\r\n            <label className='heading'>Filters</label>\r\n            <div className='valueContainer'>\r\n                <span className='valueText text-left'>&#8377;{props.priceRange.start}</span>\r\n                <span className='valueText text-right'>&#8377;{props.priceRange.end}</span>\r\n            </div>\r\n            <div style={styles.sliderWrapper}>\r\n                <RangeSlider\r\n                    step={2000}\r\n                    value={props.priceRange}\r\n                    min={0}\r\n                    max={100000}\r\n                    onChange={(value) => props.updatePriceRange(value)}\r\n                    wrapperStyle={styles.slider}\r\n                    trackStyle={styles.trackStyle}\r\n                    highlightedTrackStyle={styles.highlightedTrackStyle}\r\n                    handleStyle={styles.handleStyle}\r\n                    hoveredHandleStyle={styles.hoveredHandleStyle}\r\n                    focusedHandleStyle={styles.focusedHandleStyle}\r\n                    activeHandleStyle={styles.activeHandleStyle}\r\n                />\r\n            </div>\r\n            <div className='buttonContainer'>\r\n                <button onClick={() => props.applyFilter()}>Apply</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default filters;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Home.scss';\r\nimport ShoppingList from '../../components/ShoppingList/ShoppingList';\r\nimport SortList from '../../components/SortList/SortList';\r\nimport Filters from '../../components/Filters/Filters';\r\nimport { addToCart, updateSort, updatePriceRange, updateFliter } from '../../store/actions/cartActions';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\n\r\nconst home = (props) => {\r\n    const handleItemClick = (item) => {\r\n        props.addToCart(item);\r\n    }\r\n\r\n    const handleSorting = (item) => {\r\n        props.updateSort(item);\r\n    }\r\n\r\n    const handleUpdatePriceRange = (item) => {\r\n        props.updatePriceRange(item);\r\n    }\r\n\r\n    const handleApplyFilter = () => {\r\n        props.updateFliter(props.priceRange);\r\n    }\r\n\r\n    return (\r\n        <div className='homeContainer'>\r\n            {!isMobile && <Filters\r\n                priceRange={props.priceRange}\r\n                updatePriceRange={handleUpdatePriceRange}\r\n                applyFilter={handleApplyFilter}\r\n            />}\r\n            <div className='sortShoppingContainer'>\r\n                {!isMobile && <SortList sortOptionList={props.sortOptionList} handleSorting={handleSorting} />}\r\n                <ShoppingList itemList={props.shoppingItemList} itemClick={handleItemClick} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n    return {\r\n      shoppingItemList: state.shoppingItemList,\r\n      sortOptionList: state.sortOptionList,\r\n      priceRange: state.priceRange\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        addToCart: (item)=>{dispatch(addToCart(item))},\r\n        updateSort: (item)=>{dispatch(updateSort(item))},\r\n        updateFliter: (value)=>{dispatch(updateFliter(value))},\r\n        updatePriceRange: (value)=>{dispatch(updatePriceRange(value))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(home);","import React from 'react';\r\nimport './CartItem.scss';\r\nimport ItemDetails from '../ItemDetails/ItemDetails';\r\n\r\nconst cartItem = (props) => {\r\n    return (\r\n        <div className='cartItem'>\r\n            <img src={props.item.image} alt={props.item.name} />\r\n            <div className='itemDetails'>\r\n                <ItemDetails item={props.item} />\r\n                <div className='qtyActions'>\r\n                    <span className='minus' onClick={() => props.handleUpdateCart(props.item, false)} >-</span>\r\n                    <span className='qty'>{props.item.quantity}</span>\r\n                    <span className='plus' onClick={() => props.handleUpdateCart(props.item, true)}>+</span>\r\n                </div>\r\n                <label className='removeLink' onClick={() => props.handleRemoveFromCart(props.item)}>REMOVE</label>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default cartItem;","import React from 'react';\r\nimport './PriceInfo.scss';\r\n\r\nconst priceInfo = (props) => {\r\n\r\n    return (\r\n        <div className='priceInfoContainer'>\r\n            <label className='heading_lbl'>PRICE DETAILS</label>\r\n            <div className=\"details\">\r\n                <div className='actualPriceInfo'>\r\n                    <span className='lbl'>Price ({props.itemCount} {props.itemCount > 1 ? 'items' : 'item'})</span>\r\n                    <span className='symbol_txt'>:</span>\r\n                    <span className='val'>&#8377;{props.totalDisplayPrice}</span>\r\n                </div>\r\n                <div className='discountPriceInfo'>\r\n                    <span className='lbl'>Discount</span>\r\n                    <span className='symbol_txt'>:</span>\r\n                    <span className='val'>&#8377;{props.totalDiscountPrice}</span>\r\n                </div>  \r\n            </div>\r\n            <div className='totalPriceInfo'>\r\n                <span className='lbl'>Total Payable</span>\r\n                <span className='val'>&#8377;{props.totalPrice}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default priceInfo;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport './Cart.scss';\r\nimport CartItem from '../../components/CartItem/CartItem';\r\nimport PriceInfo from '../../components/PriceInfo/PriceInfo';\r\nimport { updateCart, removeFromCart } from '../../store/actions/cartActions';\r\n\r\nconst cart = (props) => {\r\n    let itemCount = 0, totalDisplayPrice = 0, totalActualPrice = 0;\r\n    const cartItems = props.cartItemList.map((item, index)=> {\r\n        itemCount += parseInt(item['quantity']);\r\n        totalDisplayPrice += (parseInt(item.price.display) * item.quantity);\r\n        totalActualPrice += (parseInt(item.price.actual) * item.quantity);\r\n        return(\r\n            <CartItem\r\n                item={item}\r\n                key={index}\r\n                handleUpdateCart={props.updateCart}\r\n                handleRemoveFromCart={props.removeFromCart}\r\n            />\r\n        )\r\n    });\r\n    const PriceInfoProps = {\r\n        itemCount: itemCount,\r\n        totalDisplayPrice: totalDisplayPrice,\r\n        totalDiscountPrice: totalDisplayPrice - totalActualPrice,\r\n        totalPrice: props.totalPrice\r\n    };\r\n\r\n    return (\r\n        <div className='cartContainer'>\r\n            <div className='cartItemList'>\r\n                {props.cartItemList.length > 0 ? cartItems : 'No Item in Cart'}\r\n            </div>\r\n            <PriceInfo {...PriceInfoProps} />\r\n        </div> \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        cartItemList: state.cartItems,\r\n        totalPrice:state.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    \r\n    return{\r\n        updateCart: (item, IsAdd)=>{dispatch(updateCart(item, IsAdd))},\r\n        removeFromCart: (item) => {dispatch(removeFromCart(item))}\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(cart);\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst footer = (props) => {\r\n    return (\r\n        <div className='footerContainer'>\r\n            <p>@copyright</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default footer;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport Home from '../../containers/Home/Home';\r\nimport Cart from '../../containers/Cart/Cart';\r\nimport Footer from '../Footer/Footer';\r\nimport './Layout.scss';\r\n\r\nconst layout = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path={[\"/shoppingcart\", \"/\"]} component={Home} />\r\n                <Route path=\"/cart\" component={Cart} />\r\n            </Switch>\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default layout;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout></Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const dynamicsort= (order, property, optProperty='') => {\r\n    var sort_order = -1;\r\n    if(order === \"asc\"){\r\n        sort_order = 1;\r\n    }\r\n    return function (a, b){\r\n        // a should come before b in the sorted order\r\n        const valA = optProperty !== '' ? a[property][optProperty] : a[property];\r\n        const valB = optProperty !== '' ? b[property][optProperty] : b[property];\r\n        if(valA < valB){\r\n                return -1 * sort_order;\r\n        // a should come after b in the sorted order\r\n        }else if(valA > valB){\r\n                return 1 * sort_order;\r\n        // a and b are the same\r\n        }else{\r\n                return 0 * sort_order;\r\n        }\r\n    }\r\n}","import shoppingItemList from '../../assets/data/cart.json';\r\nimport { dynamicsort } from '../../shared/utility/utility';\r\n\r\nconst sortOptionData = [\r\n    {id:1, displayName: 'Price -- High Low', sortKey: 'desc', checked:false},\r\n    {id:2, displayName: 'Price -- Low High', sortKey: 'asc', checked:false},\r\n    {id:3, displayName: 'Discount', sortKey: 'discount', checked:false}\r\n];\r\n\r\n// const priceRangeData = (itemList) => {\r\n//     let priceRange = {\r\n//         start: 0,\r\n//         end: 0,\r\n//     };\r\n\r\n//     if (itemList.length > 0) {\r\n//         const sortedItemList = itemList.sort(dynamicsort('asc', 'price', 'actual'));\r\n//         priceRange.start = sortedItemList[0].price.actual;\r\n//         priceRange.end = sortedItemList[sortedItemList.length - 1].price.actual;\r\n//     }\r\n\r\n//     return priceRange;\r\n// }\r\n\r\nconst initState = {\r\n    items: [ ...shoppingItemList.items ],\r\n    shoppingItemList: [ ...shoppingItemList.items ],\r\n    cartItems:[],\r\n    total: 0,\r\n    sortOptionList: sortOptionData,\r\n    priceRange: {\r\n        start: 0,\r\n        end: 100000,\r\n    },\r\n    isFilterApplied: false\r\n}\r\n\r\n\r\n\r\n\r\nconst addToCart = (state, action) => {\r\n    let currentItem = state.shoppingItemList.find(item => item.name === action.item.name);\r\n    let existed_item= state.cartItems.find(item => item.name === action.item.name)\r\n    if(existed_item)\r\n    {\r\n        currentItem['quantity'] += 1;\r\n        return {\r\n            ...state,\r\n            total: state.total + currentItem.price.actual\r\n        }\r\n    }\r\n    else {\r\n        currentItem['quantity'] = 1;\r\n        //calculating the total\r\n        let newTotal = state.total + currentItem.price.actual\r\n        \r\n        return{\r\n            ...state,\r\n            cartItems: [...state.cartItems, currentItem],\r\n            total : newTotal\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst updateCart = (state, action) => {\r\n    let existedCartItem= state.cartItems.find(item=> item.name === action.data.item.name)\r\n    if(existedCartItem)\r\n    {\r\n\r\n        if(action.data.isAdd) {\r\n            existedCartItem['quantity'] += 1;\r\n        }\r\n        else {\r\n            if(existedCartItem['quantity'] === 1) {\r\n                let existedItemIndex= state.cartItems.findIndex(item=> item.name === action.data.item.name);\r\n                state.cartItems.splice(existedItemIndex, 1);\r\n            }\r\n            else {\r\n                existedCartItem['quantity'] -= 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        total: action.data.isAdd ? state.total + existedCartItem.price.actual : state.total - existedCartItem.price.actual\r\n    }\r\n}\r\n\r\nconst removeFromCart = (state, action) => {\r\n    let existedCartItem= state.cartItems.find(item=> item.name === action.item.name);\r\n    let itemPriceByQuantity = 0;\r\n    if(existedCartItem)\r\n    {\r\n        itemPriceByQuantity = existedCartItem.price.actual * existedCartItem['quantity'];\r\n        let existedItemIndex= state.cartItems.findIndex(item=> item.name === action.item.name);\r\n        state.cartItems.splice(existedItemIndex, 1);\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        total: state.total - itemPriceByQuantity\r\n    }\r\n}\r\n\r\nconst updateSort = (state, action) => {\r\n    let sortOptionList = [ ...state.sortOptionList ];\r\n    let items = [ ...state.shoppingItemList ];\r\n    const priceRangeData = state.priceRange;\r\n    let sortingKey = '';\r\n    sortOptionList.forEach((item, index) => {\r\n        if (action.item.id === item.id) {\r\n            item.checked = true;\r\n            sortingKey = item.sortKey\r\n        }\r\n        else {\r\n            item.checked = false;\r\n        }\r\n    });\r\n\r\n    if (sortingKey === 'discount') {\r\n        items = items.sort(dynamicsort(sortingKey, 'discount'));\r\n    }\r\n    else {\r\n        items = items.sort(dynamicsort(sortingKey, 'price', 'actual'));\r\n    }\r\n\r\n    if (state.isFilterApplied) {\r\n        items = items.filter((item) => {\r\n            return (item.price.actual >= priceRangeData.start && item.price.actual <= priceRangeData.end)\r\n        });\r\n    }\r\n\r\n    return{\r\n        ...state,\r\n        shoppingItemList: items,\r\n        sortOptionList\r\n    }\r\n}\r\n\r\nconst updateFilter = (state, action) => {\r\n    const priceRangeData = action.priceRangeVal;\r\n    let items = [ ...state.items ];\r\n    const sortOptionList = [ ...state.sortOptionList ];\r\n    const selectedSorting = sortOptionList.filter(item => item.checked === true);\r\n    \r\n\r\n    items = items.filter((item) => {\r\n        return (item.price.actual >= priceRangeData.start && item.price.actual <= priceRangeData.end)\r\n    });\r\n\r\n    if (selectedSorting.length > 0) {\r\n        items = selectedSorting[0].sortKey === 'discount' ?\r\n            items.sort(dynamicsort(selectedSorting[0].sortKey, 'discount')) :\r\n            items.sort(dynamicsort(selectedSorting[0].sortKey, 'price', 'actual'));\r\n    }\r\n\r\n    return{\r\n        ...state,\r\n        shoppingItemList: items,\r\n        isFilterApplied: true\r\n    }\r\n}\r\n\r\nconst updatePriceRange = (state, action) => {\r\n    return{\r\n        ...state,\r\n        priceRange: action.value\r\n    }\r\n}\r\n\r\nconst searchApply = (state, action) => {\r\n    const searchText = action.value;\r\n    const priceRangeData = state.priceRange;\r\n    let items = [ ...state.items ];\r\n    const sortOptionList = [ ...state.sortOptionList ];\r\n    const selectedSorting = sortOptionList.filter(item => item.checked === true);\r\n    \r\n    if (searchText.trim().length > 0) {\r\n        items = items.filter((item) => {\r\n            return (item.name.toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\r\n        });\r\n    }\r\n\r\n    if (state.isFilterApplied) {\r\n        items = items.filter((item) => {\r\n            return (item.price.actual >= priceRangeData.start && item.price.actual <= priceRangeData.end)\r\n        });\r\n    }\r\n\r\n    if (selectedSorting.length > 0) {\r\n        items = selectedSorting[0].sortKey === 'discount' ?\r\n            items.sort(dynamicsort(selectedSorting[0].sortKey, 'discount')) :\r\n            items.sort(dynamicsort(selectedSorting[0].sortKey, 'price', 'actual'));\r\n    }\r\n\r\n    return{\r\n        ...state,\r\n        shoppingItemList: items\r\n    }\r\n}\r\n\r\n\r\nconst cartReducer= (state = initState,action)=>{\r\n    switch (action.type) {\r\n        case 'ADD_TO_CART':\r\n          return addToCart(state, action);\r\n        case 'UPDATE_CART':\r\n          return updateCart(state, action);\r\n        case 'REMOVE_FROM_CART':\r\n          return removeFromCart(state, action);\r\n        case 'UPDATE_SORT':\r\n          return updateSort(state, action);\r\n        case 'UPDATE_FILTER':\r\n          return updateFilter(state, action);\r\n        case 'UPDATE_PRICE_RANGE':\r\n          return updatePriceRange(state, action);\r\n        case 'SEARCH_APPLY':\r\n          return searchApply(state, action);\r\n        default:\r\n          return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;","import cartReducer from './reducers/cartReducer';\r\nimport { createStore } from 'redux';\r\n\r\n\r\nconst store = createStore(cartReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './index.scss';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}